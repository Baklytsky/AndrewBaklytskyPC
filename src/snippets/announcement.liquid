<!-- /snippets/announcement.liquid -->

{%- if section.blocks.size > 0 -%}
  {%- liquid
    assign announcement_markup = ''
    assign is_top_bar = true
    assign has_progress_holder = false
    assign layout = section.settings.layout
    assign show_arrows = section.settings.show_arrows
    assign show_top_border = section.settings.show_top_border
    assign show_bottom_border = section.settings.show_bottom_border
    assign border_color = section.settings.border_color
    assign bg_color = section.settings.bg_color
    assign gradient = section.settings.gradient | default: 'none'
    assign bg_color_set = false
    assign bg_image = section.settings.bg_image
    assign text_caps = section.settings.text_caps
    assign type_style = section.settings.type_style
    assign letter_spacing = section.settings.letter_spacing | divided_by: 1000.0 | append: 'em'
    assign text_size = section.settings.text_size | times: 0.01
    assign text_size_mobile = text_size
    assign color = section.settings.color
    assign padding = section.settings.padding | append: 'px'
    assign message_spacing = section.settings.message_spacing | append: 'px'
    assign section_type = section_type | default: 'announcement-bar'
    if section_type == 'marquee'
      assign is_top_bar = false
    endif
    assign section_id = section_type | append: '--' | append: section.id
    assign section_selector_id = '#' | append: section_id
    assign animation_anchor = section_selector_id
    assign animation_delay = 150
    assign placeholder_index = 0

    if text_size > 4.0
      assign text_size_mobile = 4.0
    endif

    if bg_color != 'rgba(0,0,0,0)' and bg_color != ''
      assign bg_color_set = true
    else
      if gradient != 'none'
        assign bg_color_set = true
      endif
    endif
  -%}

  {%- for block in section.blocks -%}
    {%- liquid
      comment
        Disable animations for blocks only
      endcomment
      assign animations_enabled = false
      assign classes = ''
      assign target_device_enable = false
      assign target_url = block.settings.target_url
      assign target_url_enabled = block.settings.target_url_enabled
      assign target_referrer = block.settings.target_referrer
      assign target_referrer_enabled = block.settings.target_referrer_enabled
      assign page_type = request.page_type

      if layout == 'slider'
        assign classes = 'announcement__slide'
      else
        assign classes = 'announcement__ticker'
      endif

      if block.settings.target_device_enabled
        assign target_device_enable = true

        if block.settings.target_device == 'mobile'
          assign classes = classes | append: ' mobile'
        endif

        if block.settings.target_device == 'desktop'
          assign classes = classes | append: ' desktop'
        endif
      endif

      capture block_class
        echo 'announcement__block'
        case block.type
          when 'text'
            echo ' announcement__block--text'
          when 'message'
            echo ' announcement__block--message'
          when 'custom'
            echo ' announcement__block--custom'
          when 'image'
            echo ' announcement__block--image'
        endcase
        echo ' ' | append: classes
      endcapture

      assign show_announcement = true
      if target_url_enabled or target_referrer_enabled
        assign show_announcement = false
      endif

      if target_url_enabled and target_url != blank
        if target_url == routes.all_products_collection_url
          if page_type == 'product'
            assign show_announcement = true
          elsif page_type == 'collection'
            assign show_announcement = false
          endif
        elsif target_url == routes.collections_url
          if page_type == 'collection'
            assign show_announcement = true
          else
            assign show_announcement = false
          endif
        elsif target_url == request.path
          assign show_announcement = true
        endif
      endif

      if target_referrer_enabled and target_referrer != blank
        capture target_referrer_attribute
          echo 'data-target-referrer="' | append: target_referrer | append: '"'
        endcapture

        assign show_announcement = true
      endif

      if request.design_mode
        assign show_announcement = true
      endif
    -%}

    {%- capture block_attributes -%}
      class="{{ block_class }}"
      data-slide="{{ block.id }}"
      data-slide-index="{{ forloop.index0 }}"
      data-block-id="{{ block.id }}"
      {{ target_referrer_attribute }}
      {%- if target_device_enable -%}
        data-target-device="true"
      {%- endif -%}
      {{ block.shopify_attributes }}
    {%- endcapture -%}

    {%- if show_announcement -%}
      {%- capture announcement_html -%}
        {%- case block.type -%}
          {%- when 'text' -%}
            {%- if block.settings.text != blank -%}
              {%- liquid
                assign title = block.settings.text | replace: '|', '<span class="announcement__divider"></span>'
                assign icon_image = block.settings.icon_image
                assign icon_name = block.settings.icon_name
                assign icon_width = block.settings.icon_width
                assign retina_size = icon_width | times: 2
                assign image_widths = icon_width | append: ', ' | append: retina_size
                assign sizes = icon_width | append: 'px'
                assign icon_color = block.settings.icon_color
                assign text_color = block.settings.text_color
                assign heading_highlight_type = block.settings.heading_highlight_type
                assign highlight_color = block.settings.highlight_color
                assign highlight_text_color = block.settings.highlight_text_color
              -%}
              {%- capture block_style -%}
                {%- if text_color != '' and text_color != 'rgba(0,0,0,0)' -%}
                  --text: {{ text_color }};
                {%- endif -%}

                {%- if heading_highlight_type != 'highlight' -%}
                  --highlight-color: var(--text);
                {%- endif -%}

                {%- if highlight_color != 'rgba(0,0,0,0)' and highlight_color != '' -%}
                  --highlight-color: {{ highlight_color }};
                {%- endif -%}

                {%- if highlight_text_color != 'rgba(0,0,0,0)' and highlight_text_color != '' -%}
                  --highlight-text-color: {{ highlight_text_color }};
                {%- endif -%}
              {%- endcapture -%}

              {%- capture styles -%}
                width: {{ icon_width }}px;

                {%- if icon_image -%}
                  padding-top: {{ icon_width | divided_by: icon_image.aspect_ratio | round: 2 }}px;
                {%- endif -%}

                {%- if icon_color != '' and icon_color != 'rgba(0,0,0,0)' and icon_image == blank -%}
                  --text: {{ icon_color }};
                {%- endif -%}
              {%- endcapture -%}

              [%- render 'partials/title-text-highlights' -%]

              {%- capture icon -%}
                {%- if icon_image != blank -%}
                  {%- render 'image-fill', img_object: icon_image, width: retina_size, widths: image_widths, sizes: sizes, classes: 'announcement__icon', styles: styles -%}
                {%- elsif icon_name != 'none' -%}
                  <div class="announcement__icon icon-stroke" style="{{ styles }}">
                    {%- render 'icons', icon: icon_name -%}
                  </div>
                {%- endif -%}
              {%- endcapture -%}

              {%- if layout == 'slider' -%}
                {% if block_style != blank %}
                  {%- capture block_attributes -%}
                    {{ block_attributes }}
                    style="{{ block_style }}"
                  {%- endcapture -%}
                {% endif %}

                <div {{ block_attributes }}>
                  <div data-ticker-frame class="announcement__message">
                    <div data-ticker-scale class="announcement__scale">
                      <div data-ticker-text class="announcement__text{% if has_text_highlight %} {{ text_highlight_wrapper_class }}{% endif %}">
                        {{ icon }}
                        {% render 'title-with-highlights',
                          title: title,
                          heading_highlight_type: heading_highlight_type,
                          highlight_color: highlight_color,
                          has_text_highlight: has_text_highlight %}
                      </div>
                    </div>
                  </div>
                </div>
              {%- endif -%}

              {%- if layout == 'marquee' -%}
                {%- if has_text_highlight -%}
                  {%- assign block_class = block_class | append: ' ' | append: text_highlight_wrapper_class -%}
                {%- endif -%}

                {%- capture block_attributes -%}
                  class="{{ block_class }}"
                  {%- if block_style != blank -%}
                    style="{{ block_style }}"
                  {%- endif -%}
                  data-slide="{{ block.id }}"
                  data-slide-index="{{ forloop.index0 }}"
                  data-block-id="{{ block.id }}"
                  {%- if target_device_enable -%}
                    data-target-device="true"
                  {%- endif -%}
                  {{ block.shopify_attributes }}
                {%- endcapture -%}

                <div {{ block_attributes }}>
                  {{ icon }}
                  {% render 'title-with-highlights',
                    title: title,
                    heading_highlight_type: heading_highlight_type,
                    highlight_color: highlight_color,
                    has_text_highlight: has_text_highlight %}
                </div>
              {%- endif -%}
            {%- endif -%}

          {%- when 'message' -%}
            {%- if block.settings.message -%}
              {%- if layout == 'slider' -%}
                <div {{ block_attributes }}>
                  <div data-ticker-frame class="announcement__message">
                    <div data-ticker-scale class="announcement__scale">
                      <div data-ticker-text class="announcement__text">
                        [%- render 'partials/cart-message' -%]
                      </div>
                    </div>
                  </div>
                </div>
              {%- endif -%}

              {%- if layout == 'marquee' -%}
                <div {{ block_attributes }}>
                  [%- render 'partials/cart-message' -%]
                </div>
              {%- endif -%}
            {%- endif -%}

          {%- when 'custom' -%}
            {%- if block.settings.text != blank -%}
              {%- if layout == 'slider' -%}
                <div {{ block_attributes }}>
                  <div data-ticker-frame class="announcement__message">
                    <div data-ticker-scale class="announcement__scale">
                      <div data-ticker-text class="announcement__text">
                        <span>{{ block.settings.text }}</span>
                      </div>
                    </div>
                  </div>
                </div>
              {%- endif -%}
            {%- endif -%}

            {%- if layout == 'marquee' -%}
              <div {{ block_attributes }}>
                <span>{{ block.settings.text }}</span>
              </div>
            {%- endif -%}

          {%- when 'image' -%}
            {%- liquid
              assign image = block.settings.image
              assign image_link = block.settings.link
              assign image_width = block.settings.image_width
              assign image_width_retina = image_width | times: 2
              assign image_widths = image_width | append: ', ' | append: image_width_retina
              assign sizes = image_width | append: 'px'
              assign animation_delay = animation_delay | plus: 150

              assign image_height = image_width | divided_by: image.aspect_ratio | round: 2
              if image == blank
                assign image_height = image_width
                assign placeholder_index = placeholder_index | modulo: 4 | plus: 1
                assign placeholder_svg = 'product-apparel-' | append: placeholder_index
              endif

              capture styles
                echo '--image-width: ' | append: image_width | append: 'px; '
                echo '--image-height: ' | append: image_height | append: 'px; '
              endcapture

              capture image_render
                if image_link
                  echo '<a href="' | append: image_link | append: '">'
                endif

                comment
                  Note: Images are loaded immediately with 'eager' because of issues with deferred 'lazy' loading in Safari, as well as in the Theme editor, when the HTML elements are cloned
                endcomment

                render 'image', image: image, width: image_width_retina, widths: image_widths, sizes: sizes, loading: 'eager', classes: 'announcement__image', cover: false, placeholder_svg: placeholder_svg

                if image_link
                  echo '</a>'
                endif
              endcapture
            -%}

            {%- if layout == 'slider' -%}
              <div {{ block_attributes }} style="{{ styles }}">
                <div data-ticker-frame class="announcement__message">
                  <div data-ticker-scale class="announcement__scale">
                    <div data-ticker-text class="announcement__text">
                      {{ image_render }}
                    </div>
                  </div>
                </div>
              </div>
            {%- endif -%}

            {%- if layout == 'marquee' -%}
              <div {{ block_attributes }} style="{{ styles }}">
                {{ image_render }}
              </div>
            {%- endif -%}
        {%- endcase -%}
      {%- endcapture -%}

      {%- assign announcement_markup = announcement_markup | append: announcement_html -%}
    {%- endif -%}
  {%- endfor -%}
{%- endif -%}

{% if is_top_bar %}
<div data-announcement-bar>
{% endif %}
  <div id="{{ section_id }}"
    class="section-padding"
    data-section-type="{{ section_type }}"
    data-section-id="{{ section.id }}"
    {% if is_top_bar %}
      data-announcement-wrapper
    {% endif %}
    {% if settings.animations_enabled %}
      data-aos="fade"
      data-aos-anchor="{{ animation_anchor }}"
      data-aos-delay="{{ animation_delay }}"
    {% endif %}>
    {% if is_top_bar %}
      <div class="ie11-error-message">
        <p>{{- 'general.ie11_support_message' | t -}}</p>
      </div>
    {% endif %}

    {%- if announcement_markup != blank -%}
      {%- liquid
        assign line_height = 1.5

        capture type_adjustment
          case type_style
            when 'font-heading'
              echo 'var(--FONT-ADJUST-HEADING)'
            when 'font-body'
              echo 'var(--FONT-ADJUST-BODY)'
            when 'subheading-text'
              echo 'var(--FONT-ADJUST-SUBHEADING)'
          endcase
        endcapture

        capture borders_px
          if show_top_border
            echo ' + var(--BORDER-WIDTH)'
          endif
          if show_bottom_border
            echo ' + var(--BORDER-WIDTH)'
          endif
        endcapture
      -%}

      {%- style -%}
        {%- if is_top_bar -%}
          /* Prevent CLS on page load */
          :root {
            --announcement-height: calc(0.75rem * {{ type_adjustment }} * {{ text_size }} * {{ line_height }} + {{ padding }} * 2{{ borders_px }});
          }
          @media screen and (max-width: 767px) {
            :root {
              --announcement-height: calc(0.75rem * {{ type_adjustment }} * {{ text_size_mobile }} * {{ line_height }} + {{ padding }} * 2{{ borders_px }});
            }
          }
        {%- else -%}
          {{ section_selector_id }} {
            --PT: {{ section.settings.padding_top }}px;
            --PB: {{ section.settings.padding_bottom }}px;
          }
        {%- endif -%}

        {{ section_selector_id }} .announcement {
          --adjust-body: calc(var(--FONT-ADJUST-BODY) * {{ text_size }});
          --adjust-heading: calc(var(--FONT-ADJUST-HEADING) * {{ text_size }});
          --adjust-accent: calc(var(--FONT-ADJUST-SUBHEADING) * {{ text_size }});
          --padding: {{ padding }};
          --letter-spacing: {{ letter_spacing }};
          --line-height: {{ line_height }};
          --type-adjustment: {{ type_adjustment }};

          {%- if bg_color_set -%}
            {%- if gradient != 'none' -%}
              --bg: {{ gradient }};
            {%- else -%}
              --bg: {{ bg_color }};
            {%- endif -%}
          {%- endif %}

          {%- if color != 'rgba(0,0,0,0)' and color != '' -%}
            --text: {{ color }};
          {%- endif -%}

          {%- if border_color != 'rgba(0,0,0,0)' and border_color != '' -%}
            --border: {{ border_color }};
          {%- endif -%}
        }

        {{ section_selector_id }} .flickity-enabled .ticker--animated,
        {{ section_selector_id }} .announcement__ticker { padding: 0 {{ message_spacing }}; }

        @media screen and (max-width: 767px) {
          {{ section_selector_id }} .announcement {
            --adjust-body: calc(var(--FONT-ADJUST-BODY) * {{ text_size_mobile }});
            --adjust-heading: calc(var(--FONT-ADJUST-HEADING) * {{ text_size_mobile }});
            --adjust-accent: calc(var(--FONT-ADJUST-SUBHEADING) * {{ text_size_mobile }});
          }
        }
      {%- endstyle -%}

      <div class="announcement {{ type_style }}{% if text_caps %} caps{% endif %}{% if show_top_border %} announcement--top-border{% endif %}{% if show_bottom_border %} announcement--bottom-border{% endif %}" data-announcement>
        {%- if bg_image != blank -%}
          {%- render 'image-fill', is_background: true, img_object: bg_image, sizes: '100vw' -%}
        {%- endif -%}

        {%- if layout == 'slider' -%}
          <div class="announcement__slider"
            data-slider
            {% if show_arrows %}data-slider-arrows{% endif %}
            data-slider-speed="{{ section.settings.slider_speed | times: 1000 }}">
            {{ announcement_markup }}
          </div>
        {%- endif -%}

        {%- if layout == 'marquee' -%}
          <div class="announcement__slider">
            <div class="announcement__slide" data-announcement-slide>
              <div data-ticker-frame data-marquee-speed="{{ section.settings.marquee_speed }}" class="announcement__message">
                <div data-ticker-scale class="ticker--unloaded announcement__scale">
                  <div data-ticker-text class="announcement__text {{ section.settings.direction }}">
                    {{ announcement_markup }}
                  </div>
                </div>
              </div>
            </div>
          </div>
        {%- endif -%}
      </div>
    {%- endif -%}
  </div>
{% if is_top_bar %}
</div>
{% endif %}